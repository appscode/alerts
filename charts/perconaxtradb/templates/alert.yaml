{{ $app := (include "perconaxtradb.fullname" .) }}

{{ if .Values.form.alert.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "perconaxtradb.labels" . | nindent 4 }}
{{- if .Values.form.alert.labels }}
    {{- toYaml .Values.form.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.form.alert.annotations }}
  annotations:
    {{- toYaml .Values.form.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  {{ if .Values.form.alert.groups.database.enabled -}}
  - name: perconaxtradb.database.{{ .Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if .Values.form.alert.groups.database.rules.mySQLInstanceDown.enabled -}}
    - alert: MySQLInstanceDown
      expr: mysql_up{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} == 0
      for: {{ .Values.form.alert.groups.database.rules.mySQLInstanceDown.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLInstanceDown.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL instance down (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL instance is down on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLServiceDown.enabled -}}
    - alert: MySQLServiceDown
      expr: sum by (service) (mysql_up{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}) == 0
      for: {{ .Values.form.alert.groups.database.rules.mySQLServiceDown.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLServiceDown.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL service down (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL service is down on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLTooManyConnections.enabled -}}
    - alert: MySQLTooManyConnections
      expr: max_over_time(mysql_global_status_threads_connected{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) / mysql_global_variables_max_connections{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} * 100 > {{.Values.form.alert.groups.database.rules.mySQLTooManyConnections.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLTooManyConnections.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLTooManyConnections.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL too many connections (> {{.Values.form.alert.groups.database.rules.mySQLTooManyConnections.val}}%) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "More than {{.Values.form.alert.groups.database.rules.mySQLTooManyConnections.val}}% of MySQL connections are in use on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLHighThreadsRunning.enabled -}}
    - alert: MySQLHighThreadsRunning
      expr: max_over_time(mysql_global_status_threads_running{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) / mysql_global_variables_max_connections{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} * 100 > {{.Values.form.alert.groups.database.rules.mySQLHighThreadsRunning.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLHighThreadsRunning.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLHighThreadsRunning.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL high threads running (> {{.Values.form.alert.groups.database.rules.mySQLHighThreadsRunning.val}}%) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "More than {{.Values.form.alert.groups.database.rules.mySQLHighThreadsRunning.val}}% of MySQL threads are in use on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLSlowQueries.enabled -}}
    - alert: MySQLSlowQueries
      expr: increase(mysql_global_status_slow_queries{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) > 0
      for: {{ .Values.form.alert.groups.database.rules.mySQLSlowQueries.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLSlowQueries.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL slow queries on (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL server mysql has some new slow query.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLInnoDBLogWaits.enabled -}}
    - alert: MySQLInnoDBLogWaits
      expr: rate(mysql_global_status_innodb_log_waits{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[15m]) > {{.Values.form.alert.groups.database.rules.mySQLInnoDBLogWaits.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLInnoDBLogWaits.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLInnoDBLogWaits.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL InnoDB log waits (> {{.Values.form.alert.groups.database.rules.mySQLInnoDBLogWaits.val}}) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL innodb log writes stalling\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLRestarted.enabled -}}
    - alert: MySQLRestarted
      expr: mysql_global_status_uptime{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} < {{.Values.form.alert.groups.database.rules.mySQLRestarted.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLRestarted.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLRestarted.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL restarted ({{.Values.form.alert.groups.database.rules.mySQLRestarted.val}} second ago) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL restarted\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLHighQPS.enabled -}}
    - alert: MySQLHighQPS
      expr: rate(mysql_global_status_queries{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) > {{.Values.form.alert.groups.database.rules.mySQLHighQPS.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLHighQPS.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLHighQPS.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL has high queries per second (> {{.Values.form.alert.groups.database.rules.mySQLHighQPS.val}}) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL has high QPS on (instance {{`{{`}} $labels.pod {{`}}`}})\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLHighIncomingBytes.enabled -}}
    - alert: MySQLHighIncomingBytes
      expr: rate(mysql_global_status_bytes_received{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) > {{.Values.form.alert.groups.database.rules.mySQLHighIncomingBytes.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLHighIncomingBytes.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLHighIncomingBytes.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL has high incoming bytes second (> {{.Values.form.alert.groups.database.rules.mySQLHighIncomingBytes.val}}) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL has high incoming bytes per second on (instance {{`{{`}} $labels.pod {{`}}`}})\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLHighOutgoingBytes.enabled -}}
    - alert: MySQLHighOutgoingBytes
      expr: rate(mysql_global_status_bytes_sent{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) > {{.Values.form.alert.groups.database.rules.mySQLHighOutgoingBytes.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLHighOutgoingBytes.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLHighOutgoingBytes.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL has high outgoing bytes second (> {{.Values.form.alert.groups.database.rules.mySQLHighOutgoingBytes.val}}) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL has high outgoing bytes per second on (instance {{`{{`}} $labels.pod {{`}}`}})\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.database.rules.mySQLTooManyOpenFiles.enabled -}}
    - alert: MySQLTooManyOpenFiles
      expr: max_over_time(mysql_global_status_open_files{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) / mysql_global_variables_open_files_limit{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} * 100 > {{.Values.form.alert.groups.database.rules.mySQLTooManyOpenFiles.val}}
      for: {{ .Values.form.alert.groups.database.rules.mySQLTooManyOpenFiles.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.database.rules.mySQLTooManyOpenFiles.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MySQL too many opened files (> {{.Values.form.alert.groups.database.rules.mySQLTooManyOpenFiles.val}}%) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MySQL too many opened files on (instance {{`{{`}} $labels.pod {{`}}`}})\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ if .Values.form.alert.groups.cluster.enabled -}}
  - name: perconaxtradb.cluster.{{ .Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if .Values.form.alert.groups.cluster.rules.galeraReplicationLatencyTooLong.enabled -}}
    - alert: GaleraReplicationLatencyTooLong
      expr: mysql_galera_evs_repl_latency_avg_seconds{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} > {{.Values.form.alert.groups.cluster.rules.galeraReplicationLatencyTooLong.val}}
      for: {{ .Values.form.alert.groups.cluster.rules.galeraReplicationLatencyTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.cluster.rules.galeraReplicationLatencyTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDB Galera Cluster latency too long ( > {{.Values.form.alert.groups.cluster.rules.galeraReplicationLatencyTooLong.val}} second,) (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "PerconaXtraDB Galera Cluster latency too long on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ if .Values.form.alert.groups.provisioner.enabled -}}
  - name: perconaxtradb.provisioner.{{ .Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if .Values.form.alert.groups.provisioner.rules.appPhaseNotReady.enabled -}}
    - alert: KubeDBPerconaXtraDBPhaseNotReady
      expr: kubedb_com_perconaxtradb_status_phase{phase="NotReady",app="{{ $app }}",namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.provisioner.rules.appPhaseNotReady.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.provisioner.rules.appPhaseNotReady.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB PerconaXtraDB Phase NotReady (perconaxtradb {{`{{`}} $labels.perconaxtradb {{`}}`}})
        description: "KubeDB PerconaXtraDB Phase not ready on {{`{{`}} $labels.perconaxtradb {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.provisioner.rules.appPhaseCritical.enabled -}}
    - alert: KubeDBPerconaXtraDBPhaseCritical
      expr: kubedb_com_perconaxtradb_status_phase{phase="Critical",app="{{ $app }}",namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.provisioner.rules.appPhaseCritical.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.provisioner.rules.appPhaseCritical.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB PerconaXtraDB Phase Critical (perconaxtradb {{`{{`}} $labels.perconaxtradb {{`}}`}})
        description: "KubeDB PerconaXtraDB Phase Critical {{`{{`}} $labels.perconaxtradb {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ if .Values.form.alert.groups.opsManager.enabled -}}
  - name: perconaxtradb.opsManager.{{ .Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if .Values.form.alert.groups.opsManager.rules.opsRequestOnProgress.enabled -}}
    - alert: KubeDBPerconaXtraDBOpsRequestOnProgress
      expr: ops_kubedb_com_perconaxtradbopsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.opsManager.rules.opsRequestOnProgress.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.opsManager.rules.opsRequestOnProgress.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDBOpsRequest on progress (perconaxtradbopsrequest {{`{{`}} $labels.perconaxtradbopsrequest {{`}}`}})
        description: "MaraiDBOpsRequest {{`{{`}} $labels.perconaxtradbopsrequest {{`}}`}} is in progressressing status\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.opsManager.rules.opsRequestStatusProgressingToLong.enabled -}}
    - alert: KubeDBPerconaXtraDBOpsRequestStatusProgressingToLong
      expr: ops_kubedb_com_perconaxtradbopsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.opsManager.rules.opsRequestStatusProgressingToLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.opsManager.rules.opsRequestStatusProgressingToLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDBOpsRequest is in progressing status for too long (perconaxtradbopsrequest {{`{{`}} $labels.perconaxtradbopsrequest {{`}}`}})
        description: "MaraiDBOpsRequest {{`{{`}} $labels.perconaxtradbopsrequest {{`}}`}} is in progressing status for too long\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.opsManager.rules.opsRequestFailed.enabled -}}
    - alert: KubeDBPerconaXtraDBOpsRequestFailed
      expr: ops_kubedb_com_perconaxtradbopsrequest_status_phase{phase="Failed",app="{{ $app }}",namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.opsManager.rules.opsRequestFailed.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.opsManager.rules.opsRequestFailed.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDBOpsRequest failed (perconaxtradbopsrequest {{`{{`}} $labels.perconaxtradbopsrequest {{`}}`}})
        description: "MaraiDBOpsRequest {{`{{`}} $labels.perconaxtradbopsrequest {{`}}`}} failed \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ if .Values.form.alert.groups.stash.enabled -}}
  - name: perconaxtradb.stash.{{ .Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if .Values.form.alert.groups.stash.rules.backupSessionFailed.enabled -}}
    - alert: PerconaXtraDBStashBackupSessionFailed
      expr: stash_backup_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"} == 0
      for: {{ .Values.form.alert.groups.stash.rules.backupSessionFailed.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.backupSessionFailed.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDB Stash backup session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash backupsession failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.stash.rules.restoreSessionFailed.enabled -}}
    - alert: PerconaXtraDBStashRestoreSessionFailed
      expr: stash_restore_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_restoresession_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"} == 0
      for: {{ .Values.form.alert.groups.stash.rules.restoreSessionFailed.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.restoreSessionFailed.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDB Stash restore session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash restore session failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.stash.rules.noBackupSessionForTooLong.enabled -}}
    - alert: PerconaXtraDBStashNoBackupSessionForTooLong
      expr: time() - stash_backup_last_success_time_seconds + on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"} - 1 > {{ .Values.form.alert.groups.stash.rules.noBackupSessionForTooLong.val }}
      for: {{ .Values.form.alert.groups.stash.rules.noBackupSessionForTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.noBackupSessionForTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDB Stash no backup for last {{ .Values.form.alert.groups.stash.rules.noBackupSessionForTooLong.val }} second (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash no backup for too long {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.stash.rules.repositoryCorrupted.enabled -}}
    - alert: PerconaXtraDBStashRepositoryCorrupted
      expr: stash_repository_integrity * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"}
      for: {{ .Values.form.alert.groups.stash.rules.repositoryCorrupted.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.repositoryCorrupted.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDB Stash repository corrupted (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash repository corrupted {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.stash.rules.repositoryStorageRunningLow.enabled -}}
    - alert: PerconaXtraDBStashRepositoryStorageRunningLow
      expr: stash_repository_size_bytes * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"} > {{ .Values.form.alert.groups.stash.rules.repositoryStorageRunningLow.val }}
      for: {{ .Values.form.alert.groups.stash.rules.repositoryStorageRunningLow.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.repositoryStorageRunningLow.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: PerconaXtraDB Stash Repository storage more than {{ .Values.form.alert.groups.stash.rules.repositoryStorageRunningLow.val }} byte. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash Repository storage running low {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.form.alert.groups.stash.rules.backupSessionPeriodTooLong.enabled -}}
    - alert: PerconaXtraDBStashBackupSessionPeriodTooLong
      expr: stash_backup_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"} > {{ .Values.form.alert.groups.stash.rules.backupSessionPeriodTooLong.val }}
      for: {{ .Values.form.alert.groups.stash.rules.backupSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.backupSessionPeriodTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary:  PerconaXtraDB Stash backup session took more than {{ .Values.form.alert.groups.stash.rules.backupSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash backup session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.stash.rules.restoreSessionPeriodTooLong.enabled -}}
    - alert: PerconaXtraDBStashRestoreSessionPeriodTooLong
      expr: stash_restore_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_restoresession_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ .Release.Namespace }}"} > {{ .Values.form.alert.groups.stash.rules.restoreSessionPeriodTooLong.val }}
      for: {{ .Values.form.alert.groups.stash.rules.restoreSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.stash.rules.restoreSessionPeriodTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary:  PerconaXtraDB Stash restore session took more than {{ .Values.form.alert.groups.stash.rules.restoreSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "PerconaXtraDB Stash restore session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ if .Values.form.alert.groups.schemaManager.enabled -}}
  - name: perconaxtradb.schemaManager.{{ .Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if .Values.form.alert.groups.schemaManager.rules.schemaPendingForTooLong.enabled -}}
    - alert: KubeDBPerconaXtraDBSchemaPendingForTooLong
      expr: schema_kubedb_com_perconaxtradbdatabase_status_phase{phase="Pending",app="{{ $app }}",app_namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.schemaManager.rules.schemaPendingForTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.schemaManager.rules.schemaPendingForTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB schema pending for too long for (perconaxtradbdatabase {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}})
        description: "KubeDB schema pending for too long.\n {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.schemaManager.rules.schemaInProgressForTooLong.enabled -}}
    - alert: KubeDBPerconaXtraDBSchemaInProgressForTooLong
      expr: schema_kubedb_com_perconaxtradbdatabase_status_phase{phase="InProgress",app="{{ $app }}",app_namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.schemaManager.rules.schemaInProgressForTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.schemaManager.rules.schemaInProgressForTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB schema is in progress for too long for (perconaxtradbdatabase {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}})
        description: "KubeDB schema is in progress for too long.\n {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.schemaManager.rules.schemaTerminatingForTooLong.enabled -}}
    - alert: KubeDBPerconaXtraDBSchemaTerminatingForTooLong
      expr: schema_kubedb_com_perconaxtradbdatabase_status_phase{phase="Terminating",app="{{ $app }}",app_namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.schemaManager.rules.schemaTerminatingForTooLong.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.schemaManager.rules.schemaTerminatingForTooLong.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB schema terminating for too long for (perconaxtradbdatabase {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}})
        description: "KubeDB schema terminating for too long.\n {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.schemaManager.rules.schemaFailed.enabled -}}
    - alert: KubeDBPerconaXtraDBSchemaFailed
      expr: schema_kubedb_com_perconaxtradbdatabase_status_phase{phase="Failed",app="{{ $app }}",app_namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.schemaManager.rules.schemaFailed.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.schemaManager.rules.schemaFailed.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB schema failed for (perconaxtradbdatabase {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}})
        description: "KubeDB schema failed.\n {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if .Values.form.alert.groups.schemaManager.rules.schemaExpired.enabled -}}
    - alert: KubeDBPerconaXtraDBSchemaExpired
      expr: schema_kubedb_com_perconaxtradbdatabase_status_phase{phase="Expired",app="{{ $app }}",app_namespace="{{ .Release.Namespace }}"} == 1
      for: {{ .Values.form.alert.groups.schemaManager.rules.schemaExpired.duration }}
      labels:
        severity: {{ .Values.form.alert.groups.schemaManager.rules.schemaExpired.severity }}
        {{- include "perconaxtradb.alertLabels" . | nindent 8 }}
      annotations:
        summary: KubeDB schema expired for (perconaxtradbdatabase {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}})
        description: "KubeDB schema expired.\n {{`{{`}} $labels.perconaxtradbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
{{ end }}

{{ $app := (include "mongodb.fullname" .) }}

{{ if .Values.spec.alert.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
{{- if .Values.spec.alert.labels }}
    {{- toYaml .Values.spec.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.spec.alert.annotations }}
  annotations:
    {{- toYaml .Values.spec.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  - name: mongodb.rules
    rules:
    {{ if .Values.spec.alert.rules.mongodbVirtualMemoryUsage.enabled -}}
    - alert: MongodbVirtualMemoryUsage
      expr: sum(mongodb_memory{type="virtual",job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}) BY (job) > {{ .Values.spec.alert.rules.mongodbVirtualMemoryUsage.val }}
      for: {{ .Values.spec.alert.rules.mongodbVirtualMemoryUsage.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbVirtualMemoryUsage.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB virtual memory usage (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "High memory usage\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbReplicationLag.enabled -}}
    - alert: MongodbReplicationLag
      expr: mongodb_mongod_replset_member_replication_lag{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} > {{ .Values.spec.alert.rules.mongodbReplicationLag.val }}
      for: {{ .Values.spec.alert.rules.mongodbReplicationLag.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbReplicationLag.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB database has replication lag (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Mongodb replication lag is more than {{ .Values.spec.alert.rules.mongodbReplicationLag.val }}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbNumberCursorsOpen.enabled -}}
    - alert: MongodbNumberCursorsOpen
      expr: mongodb_mongod_metrics_cursor_open{state="total",job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} > {{ .Values.spec.alert.rules.mongodbNumberCursorsOpen.val }}
      for: {{ .Values.spec.alert.rules.mongodbNumberCursorsOpen.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbNumberCursorsOpen.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB number cursors open (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Too many cursors opened by MongoDB for clients (> 10k)\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbCursorsTimeouts.enabled -}}
    - alert: MongodbCursorsTimeouts
      expr: increase(mongodb_mongod_metrics_cursor_timed_out_total{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m]) > {{ .Values.spec.alert.rules.mongodbCursorsTimeouts.val }}
      for: {{ .Values.spec.alert.rules.mongodbCursorsTimeouts.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbCursorsTimeouts.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB cursors timeouts (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Too many cursors are timing out\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbTooManyConnections.enabled -}}
    - alert: MongodbTooManyConnections
      expr: avg by(instance) (rate(mongodb_connections{state="current",job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[1m])) / avg by(instance) (sum (mongodb_connections) by (instance)) * 100 > {{ .Values.spec.alert.rules.mongodbTooManyConnections.val }}
      for: {{ .Values.spec.alert.rules.mongodbTooManyConnections.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbTooManyConnections.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB too many connections (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Too many connections (> 80%)\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongoDBPhaseCritical.enabled -}}
    - alert: MongoDBPhaseCritical
      expr: kubedb_mongodb_status_phase{mongodb="{{ $app }}", namespace="{{ .Release.Namespace }}",phase="Critical"} >= 1
      for: {{ .Values.spec.alert.rules.mongoDBPhaseCritical.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongoDBPhaseCritical.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB database is in Critical state (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Database in Critical state, one or more database nodes are not working properly.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongoDBDown.enabled -}}
    - alert: MongoDBDown
      expr: kubedb_mongodb_status_phase{mongodb="{{ $app }}", namespace="{{ .Release.Namespace }}",phase="NotReady"} >= 1
      for: {{ .Values.spec.alert.rules.mongoDBDown.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongoDBDown.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: MongoDB database is in NotReady state (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Database in NotReady state, database read/write is failing.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbHighLatency.enabled -}}
    - alert: MongoDBHighLatency
      expr: |
        rate(mongodb_mongod_op_latencies_latency_total{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[5m]) /
        rate(mongodb_mongod_op_latencies_ops_total{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[5m]) > {{ .Values.spec.alert.rules.mongodbHighLatency.val }}
      for: {{ .Values.spec.alert.rules.mongodbHighLatency.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbHighLatency.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: High latency in mongodb instances {{`{{`}} $labels.instance {{`}}`}}
        description: "High latency in instances\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbHighTicketUtilization.enabled -}}
    - alert: MongoDBHighTicketUtilization
      expr: |
        (mongodb_mongod_wiredtiger_concurrent_transactions_out_tickets{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"} /
        mongodb_mongod_wiredtiger_concurrent_transactions_total_tickets{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}) * 100
        > {{ .Values.spec.alert.rules.mongodbHighTicketUtilization.val }}
      for: {{ .Values.spec.alert.rules.mongodbHighTicketUtilization.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbHighTicketUtilization.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: Ticket usage over 75% {{`{{`}} $labels.instance {{`}}`}}
        description: "Ticket usage over 75%\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbRecurrentCursorTimeout.enabled -}}
    - alert: MongoDBRecurrentCursorTimeout
      expr: rate(mongodb_mongod_metrics_cursor_timed_out_total{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[5m]) > {{ .Values.spec.alert.rules.mongodbRecurrentCursorTimeout.val }}
      for: {{ .Values.spec.alert.rules.mongodbRecurrentCursorTimeout.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbRecurrentCursorTimeout.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: Recurrent cursors timeout in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Recurrent cursors timeout\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if .Values.spec.alert.rules.mongodbRecurrentMemoryPageFaults.enabled -}}
    - alert: MongoDBRecurrentMemoryPageFaults
      expr: rate(mongodb_extra_info_page_faults_total{job="{{ $app }}-stats",namespace="{{ .Release.Namespace }}"}[5m]) > {{ .Values.spec.alert.rules.mongodbRecurrentMemoryPageFaults.val }}
      for: {{ .Values.spec.alert.rules.mongodbRecurrentMemoryPageFaults.duration }}
      labels:
        severity: {{ .Values.spec.alert.rules.mongodbRecurrentMemoryPageFaults.severity }}
        {{- include "mongodb.alertLabels" . | nindent 8 }}
      annotations:
        summary: Recurrent memory page faults in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Recurrent memory page faults\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
{{ end }}

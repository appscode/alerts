{{ $app := (include "connectcluster-alerts.fullname" .) }}

{{ if (include "connectcluster-alerts.alertsEnabled" .Values.form.alert.enabled) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "connectcluster-alerts.labels" . | nindent 4 }}
{{- if .Values.form.alert.labels }}
    {{- toYaml .Values.form.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.form.alert.annotations }}
  annotations:
    {{- toYaml .Values.form.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  {{ with .Values.form.alert.groups.database -}}
  {{ if (include "connectcluster-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
    - name: kafka.connectcluster.{{ $.Release.Namespace }}.{{ $app }}.rules
      rules:
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectClusterWorkerDown.enabled .rules.connectClusterWorkerDown.severity)) -}}
        - alert: ConnectClusterWorkerDown
          expr: kafka_connect_worker_connector_count{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} == 0
          for: {{ .rules.connectClusterWorkerDown.duration }}
          labels:
            severity: {{ .rules.connectClusterWorkerDown.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: No ConnectCluster Worker Online! (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "Worker Count is 0.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectClusterTooManyConnections.enabled .rules.connectClusterTooManyConnections.severity)) -}}
        - alert: KafkaAbnormalControllerState
          expr: sum(kafka_connect_connection_count{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > {{ .rules.connectClusterTooManyConnections.val }}
          for: {{ .rules.connectClusterTooManyConnections.duration }}
          labels:
            severity: {{ .rules.connectClusterTooManyConnections.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary:  ConnectCluster too many connections (> {{.rules.connectClusterTooManyConnections.val}}%) (instance {{`{{`}} $labels.pod {{`}}`}})
            description: "More than {{.rules.connectClusterTooManyConnections.val}}% of ConnectCluster connections are in use on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectClusterPhaseCritical.enabled .rules.connectClusterPhaseCritical.severity)) -}}
        - alert: ConnectClusterPhaseCritical
          expr: kafka_kubedb_com_connectcluster_status_phase{app="{{ $app }}", namespace="{{ $.Release.Namespace }}",phase="Critical"} >= 1
          for: {{ .rules.connectClusterPhaseCritical.duration }}
          labels:
            severity: {{ .rules.connectClusterPhaseCritical.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: Connect Cluster is in Critical state (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "Connect Cluster in Critical state, one or more worker nodes are not working properly.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectclusterConnectorCount.enabled .rules.connectclusterConnectorCount.severity)) -}}
        - alert: ConnectclusterConnectorCount
          expr: sum(kafka_connect_worker_connector_count{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > {{ .rules.connectclusterConnectorCount.val }}
          for: {{ .rules.connectclusterConnectorCount.duration }}
          labels:
            severity: {{ .rules.connectclusterConnectorCount.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: ConnectCluster has reached connectors threshold. (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "More than {{.rules.connectclusterConnectorCount.val}}% of Connectors are running.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectclusterCoordinatorRebalanceFailed.enabled .rules.connectclusterCoordinatorRebalanceFailed.severity)) -}}
        - alert: ConnectclusterCoordinatorRebalanceFailed
          expr: sum(kafka_connect_coordinator_failed_rebalance_total{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > {{ .rules.connectclusterCoordinatorRebalanceFailed.val }}
          for: {{ .rules.connectclusterCoordinatorRebalanceFailed.duration }}
          labels:
            severity: {{ .rules.connectclusterCoordinatorRebalanceFailed.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: ConnectCluster total re-balance exceeds the threshold (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "ConnectCluster coordinator re-balance exceeds {{.rules.connectclusterConnectorCount.val}}%.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectclusterTasksErrorTotalRetries.enabled .rules.connectclusterTasksErrorTotalRetries.severity)) -}}
        - alert: ConnectclusterTasksErrorTotalRetries
          expr: sum(kafka_connect_task_error_total_retries{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > {{ .rules.connectclusterTasksErrorTotalRetries.val }}
          for: {{ .rules.connectclusterTasksErrorTotalRetries.duration }}
          labels:
            severity: {{ .rules.connectclusterTasksErrorTotalRetries.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: ConnectCluster task error total retries exceeds. (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "ConnectCluster task error total error exceeds the threshold value {{.rules.connectclusterTasksErrorTotalRetries.val}}%.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectclusterTaskTotal.enabled .rules.connectclusterTaskTotal.severity)) -}}
        - alert: ConnectclusterTaskTotal
          expr: sum(kafka_connect_worker_connector_total_task_count{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > {{ .rules.connectclusterTaskTotal.val }}
          for: {{ .rules.connectclusterTaskTotal.duration }}
          labels:
            severity: {{ .rules.connectclusterTaskTotal.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: ConnectCluster has reached tasks threshold. (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "More than {{.rules.connectclusterConnectorCount.val}}% of tasks are running.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectclusterTaskTotalFailed.enabled .rules.connectclusterTaskTotalFailed.severity)) -}}
        - alert: ConnectclusterTaskTotalFailed
          expr: sum(kafka_connect_worker_connector_failed_task_count{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > 0
          for: {{ .rules.connectclusterTaskTotalFailed.duration }}
          labels:
            severity: {{ .rules.connectclusterTaskTotalFailed.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: Task Failed (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "Some tasks are failed.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.connectclusterTaskTotalDestroyed.enabled .rules.connectclusterTaskTotalDestroyed.severity)) -}}
        - alert: ConnectclusterTaskTotalFailed
          expr: sum(kafka_connect_worker_connector_destroyed_task_count{service="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) > 0
          for: {{ .rules.connectclusterTaskTotalDestroyed.duration }}
          labels:
            severity: {{ .rules.connectclusterTaskTotalDestroyed.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: Task Destroyed (instance {{`{{`}} $labels.instance {{`}}`}})
            description: "Some tasks are destroyed.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{end -}}
  {{end -}}


  {{ with .Values.form.alert.groups.provisioner -}}
  {{ if (include "connectcluster-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
    - name: connectcluster.provisioner.{{ $.Release.Namespace }}.{{ $app }}.rules
      rules:
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseNotReady.enabled .rules.appPhaseNotReady.severity)) -}}
        - alert: KubeDBConnectClusterPhaseNotReady
          expr: kafka_kubedb_com_connectcluster_status_phase{phase="NotReady",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
          for: {{ .rules.appPhaseNotReady.duration }}
          labels:
            severity: {{ .rules.appPhaseNotReady.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: KubeDB Kafka ConnectCluster Phase NotReady (connectcluster {{`{{`}} $labels.connectcluster {{`}}`}})
            description: "KubeDB Kafka ConnectCluster Phase not ready on {{`{{`}} $labels.connectcluster {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "connectcluster-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseCritical.enabled .rules.appPhaseCritical.severity)) -}}
        - alert: KubeDBConnectClusterPhaseCritical
          expr: kafka_kubedb_com_connectcluster_status_phase{phase="Critical",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
          for: {{ .rules.appPhaseCritical.duration }}
          labels:
            severity: {{ .rules.appPhaseCritical.severity }}
        {{- include "connectcluster-alerts.alertLabels" $ | nindent 8 }}
          annotations:
            summary: KubeDB Kafka ConnectCluster Phase Critical (connectcluster {{`{{`}} $labels.connectcluster {{`}}`}})
            description: "KubeDB Kafka ConnectCluster Phase Critical {{`{{`}} $labels.connectcluster {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}

{{ end }}
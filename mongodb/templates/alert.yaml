apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubedb-mongodb-{{- .Values.namespace -}}-{{- .Values.dbName }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
    {{- range $key, $val := .Values.alert.ruleSelector }}
    {{ $key }}: {{ $val }}
    {{- end }}
spec:
  groups:
    - name: mongodb.rules
      rules:
      {{ if .Values.alert.rules.mongodbVirtualMemoryUsage.enabled -}}
      - alert: MongodbVirtualMemoryUsage
        expr: sum(mongodb_memory{type="virtual",job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}) BY (job) > {{ .Values.alert.rules.mongodbVirtualMemoryUsage.val }}
        for: {{ .Values.alert.rules.mongodbVirtualMemoryUsage.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbVirtualMemoryUsage.severity }}
          app: mongodb
          alertname: mongodb_high_memroy_usage
        annotations:
          summary: MongoDB virtual memory usage (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "High memory usage\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbReplicationLag.enabled -}}
      - alert: MongodbReplicationLag
        expr: mongodb_mongod_replset_member_replication_lag{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"} > {{ .Values.alert.rules.mongodbReplicationLag.val }}
        for: {{ .Values.alert.rules.mongodbReplicationLag.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbReplicationLag.severity }}
          app: mongodb
          alertname: mongodb_replication_lag
        annotations:
          summary: MongoDB database has replication lag (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "Mongodb replication lag is more than {{ .Values.alert.rules.mongodbReplicationLag.val }}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbNumberCursorsOpen.enabled -}}
      - alert: MongodbNumberCursorsOpen
        expr: mongodb_mongod_metrics_cursor_open{state="total",job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"} > {{ .Values.alert.rules.mongodbNumberCursorsOpen.val }}
        for: {{ .Values.alert.rules.mongodbNumberCursorsOpen.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbNumberCursorsOpen.severity }}
          app: mongodb
          alertname: mongodb_too_many_cursors_open
        annotations:
          summary: MongoDB number cursors open (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "Too many cursors opened by MongoDB for clients (> 10k)\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbCursorsTimeouts.enabled -}}
      - alert: MongodbCursorsTimeouts
        expr: increase(mongodb_mongod_metrics_cursor_timed_out_total{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}[1m]) > {{ .Values.alert.rules.mongodbCursorsTimeouts.val }}
        for: {{ .Values.alert.rules.mongodbCursorsTimeouts.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbCursorsTimeouts.severity }}
          app: mongodb
          alertname: mongodb_cursors_timeout
        annotations:
          summary: MongoDB cursors timeouts (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "Too many cursors are timing out\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbTooManyConnections.enabled -}}
      - alert: MongodbTooManyConnections
        expr: avg by(instance) (rate(mongodb_connections{state="current",job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}[1m])) / avg by(instance) (sum (mongodb_connections) by (instance)) * 100 > {{ .Values.alert.rules.mongodbTooManyConnections.val }}
        for: {{ .Values.alert.rules.mongodbTooManyConnections.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbTooManyConnections.severity }}
          app: mongodb
          alertname: mongodb_too_many_connections
        annotations:
          summary: MongoDB too many connections (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "Too many connections (> 80%)\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongoDBPhaseCritical.enabled -}}
      - alert: MongoDBPhaseCritical
        expr: kubedb_mongodb_status_phase{mongodb="{{- .Values.dbName -}}", namespace="{{- .Values.namespace -}}",phase="Critical"} >= 1
        for: {{ .Values.alert.rules.mongoDBPhaseCritical.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongoDBPhaseCritical.severity }}
          app: mongodb
          alertname: mongodb_phase_critical
        annotations:
          summary: MongoDB database is in Critical state (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "Database in Critical state, one or more database nodes are not working properly.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongoDBDown.enabled -}}
      - alert: MongoDBDown
        expr: kubedb_mongodb_status_phase{mongodb="{{- .Values.dbName -}}", namespace="{{- .Values.namespace -}}",phase="NotReady"} >= 1
        for: {{ .Values.alert.rules.mongoDBDown.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongoDBDown.severity }}
          app: mongodb
          alertname: mongodb_phase_notready
        annotations:
          summary: MongoDB database is in NotReady state (instance {{`{{`}} $labels.instance {{`}}`}})
          description: "Database in NotReady state, database read/write is failing.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbHighLatency.enabled -}}
      - alert: MongoDBHighLatency
        expr: |
          rate(mongodb_mongod_op_latencies_latency_total{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}[5m]) /
          rate(mongodb_mongod_op_latencies_ops_total{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}[5m]) > {{ .Values.alert.rules.mongodbHighLatency.val }}
        for: {{ .Values.alert.rules.mongodbHighLatency.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbHighLatency.severity }}
          app: mongodb
          alertname: mongodb_high_latency
        annotations:
          summary: High latency in mongodb instances {{`{{`}} $labels.instance {{`}}`}}
          description: "High latency in instances\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbHighTicketUtilization.enabled -}}
      - alert: MongoDBHighTicketUtilization
        expr: |
          (mongodb_mongod_wiredtiger_concurrent_transactions_out_tickets{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"} /
          mongodb_mongod_wiredtiger_concurrent_transactions_total_tickets{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}) * 100
          > {{ .Values.alert.rules.mongodbHighTicketUtilization.val }}
        for: {{ .Values.alert.rules.mongodbHighTicketUtilization.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbHighTicketUtilization.severity }}
          app: mongodb
          alertname: mongodb_high_ticket_utilization
        annotations:
          summary: Ticket usage over 75% {{`{{`}} $labels.instance {{`}}`}}
          description: "Ticket usage over 75%\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbRecurrentCursorTimeout.enabled -}}
      - alert: MongoDBRecurrentCursorTimeout
        expr: rate(mongodb_mongod_metrics_cursor_timed_out_total{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}[5m]) > {{ .Values.alert.rules.mongodbRecurrentCursorTimeout.val }}
        for: {{ .Values.alert.rules.mongodbRecurrentCursorTimeout.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbRecurrentCursorTimeout.severity }}
          app: mongodb
          alertname: mongodb_recurrent_cursor_timeout
        annotations:
          summary: Recurrent cursors timeout in instance {{`{{`}} $labels.instance {{`}}`}}
          description: "Recurrent cursors timeout\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
      {{ if .Values.alert.rules.mongodbRecurrentMemoryPageFaults.enabled -}}
      - alert: MongoDBRecurrentMemoryPageFaults
        expr: rate(mongodb_extra_info_page_faults_total{job="{{- .Values.dbName -}}-stats",namespace="{{- .Values.namespace -}}"}[5m]) > {{ .Values.alert.rules.mongodbRecurrentMemoryPageFaults.val }}
        for: {{ .Values.alert.rules.mongodbRecurrentMemoryPageFaults.duration }}
        labels:
          severity: {{ .Values.alert.rules.mongodbRecurrentMemoryPageFaults.severity }}
          app: mongodb
          alertname: mongodb_recurrent_memroy_page_faults
        annotations:
          summary: Recurrent memory page faults in instance {{`{{`}} $labels.instance {{`}}`}}
          description: "Recurrent memory page faults\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
      {{- end }}
